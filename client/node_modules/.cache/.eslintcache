[{"D:\\College\\Projects\\social-media\\client\\src\\index.js":"1","D:\\College\\Projects\\social-media\\client\\src\\App.js":"2","D:\\College\\Projects\\social-media\\client\\src\\state\\index.js":"3","D:\\College\\Projects\\social-media\\client\\src\\theme.js":"4","D:\\College\\Projects\\social-media\\client\\src\\scenes\\profilePage\\index.jsx":"5","D:\\College\\Projects\\social-media\\client\\src\\scenes\\homePage\\index.jsx":"6","D:\\College\\Projects\\social-media\\client\\src\\scenes\\loginPage\\index.jsx":"7","D:\\College\\Projects\\social-media\\client\\src\\scenes\\loginPage\\Form.jsx":"8","D:\\College\\Projects\\social-media\\client\\src\\scenes\\widgets\\PostsWidget.jsx":"9","D:\\College\\Projects\\social-media\\client\\src\\scenes\\widgets\\FriendListWidget.jsx":"10","D:\\College\\Projects\\social-media\\client\\src\\scenes\\widgets\\UserWidget.jsx":"11","D:\\College\\Projects\\social-media\\client\\src\\scenes\\widgets\\AdvertWidget.jsx":"12","D:\\College\\Projects\\social-media\\client\\src\\scenes\\widgets\\MyPostWidget.jsx":"13","D:\\College\\Projects\\social-media\\client\\src\\scenes\\navbar\\index.jsx":"14","D:\\College\\Projects\\social-media\\client\\src\\components\\FlexBetween.jsx":"15","D:\\College\\Projects\\social-media\\client\\src\\components\\Friend.jsx":"16","D:\\College\\Projects\\social-media\\client\\src\\components\\UserImage.jsx":"17","D:\\College\\Projects\\social-media\\client\\src\\components\\WidgetWrapper.jsx":"18","D:\\College\\Projects\\social-media\\client\\src\\scenes\\widgets\\PostWidget.jsx":"19","D:\\College\\Projects\\Social-Media-App\\client\\src\\index.js":"20","D:\\College\\Projects\\Social-Media-App\\client\\src\\App.js":"21","D:\\College\\Projects\\Social-Media-App\\client\\src\\state\\index.js":"22","D:\\College\\Projects\\Social-Media-App\\client\\src\\theme.js":"23","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\profilePage\\index.jsx":"24","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\loginPage\\index.jsx":"25","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\homePage\\index.jsx":"26","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\loginPage\\Form.jsx":"27","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\MyPostWidget.jsx":"28","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\FriendListWidget.jsx":"29","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\UserWidget.jsx":"30","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\AdvertWidget.jsx":"31","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\PostsWidget.jsx":"32","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\navbar\\index.jsx":"33","D:\\College\\Projects\\Social-Media-App\\client\\src\\components\\WidgetWrapper.jsx":"34","D:\\College\\Projects\\Social-Media-App\\client\\src\\components\\Friend.jsx":"35","D:\\College\\Projects\\Social-Media-App\\client\\src\\components\\FlexBetween.jsx":"36","D:\\College\\Projects\\Social-Media-App\\client\\src\\components\\UserImage.jsx":"37","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\PostWidget.jsx":"38","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\loginPage\\RainbowMouseTrail.js":"39","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\loginPage\\Loader.js":"40","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\StoriesWidget.jsx":"41","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\StoryWidget.jsx":"42","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\MyStoryWidget.jsx":"43","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\StoryModal.jsx":"44","D:\\College\\Projects\\Social-Media-App\\client\\src\\components\\SearchDrawer.jsx":"45","D:\\College\\Projects\\Social-Media-App\\client\\src\\components\\navbar\\Navbar.jsx":"46","D:\\College\\Projects\\Social-Media-App\\client\\src\\context\\authContext.js":"47","D:\\College\\Projects\\Social-Media-App\\client\\src\\context\\darkModeContext.js":"48","D:\\College\\Projects\\Social-Media-App\\client\\src\\axios.js":"49"},{"size":1452,"mtime":1696439737109,"results":"50","hashOfConfig":"51"},{"size":1254,"mtime":1696187339845,"results":"52","hashOfConfig":"51"},{"size":1238,"mtime":1694811566979,"results":"53","hashOfConfig":"51"},{"size":2762,"mtime":1696163480463,"results":"54","hashOfConfig":"51"},{"size":1905,"mtime":1694804823602,"results":"55","hashOfConfig":"51"},{"size":1486,"mtime":1694804823600,"results":"56","hashOfConfig":"51"},{"size":1342,"mtime":1696163262807,"results":"57","hashOfConfig":"51"},{"size":10123,"mtime":1696602901805,"results":"58","hashOfConfig":"51"},{"size":1881,"mtime":1694804823604,"results":"59","hashOfConfig":"51"},{"size":1619,"mtime":1694804823603,"results":"60","hashOfConfig":"51"},{"size":4496,"mtime":1694804823605,"results":"61","hashOfConfig":"51"},{"size":1239,"mtime":1694804823602,"results":"62","hashOfConfig":"51"},{"size":5215,"mtime":1694804823603,"results":"63","hashOfConfig":"51"},{"size":6056,"mtime":1694804823601,"results":"64","hashOfConfig":"51"},{"size":231,"mtime":1694804823598,"results":"65","hashOfConfig":"51"},{"size":2486,"mtime":1694804823598,"results":"66","hashOfConfig":"51"},{"size":395,"mtime":1694804823598,"results":"67","hashOfConfig":"51"},{"size":293,"mtime":1694804823598,"results":"68","hashOfConfig":"51"},{"size":4730,"mtime":1696093874123,"results":"69","hashOfConfig":"51"},{"size":1493,"mtime":1698437090613,"results":"70","hashOfConfig":"71"},{"size":1670,"mtime":1697135111726,"results":"72","hashOfConfig":"71"},{"size":1771,"mtime":1703499943793,"results":"73","hashOfConfig":"71"},{"size":3170,"mtime":1703093398007,"results":"74","hashOfConfig":"71"},{"size":2138,"mtime":1704995363726,"results":"75","hashOfConfig":"71"},{"size":4136,"mtime":1703183709707,"results":"76","hashOfConfig":"71"},{"size":1950,"mtime":1704995350281,"results":"77","hashOfConfig":"71"},{"size":12352,"mtime":1701369653156,"results":"78","hashOfConfig":"71"},{"size":5426,"mtime":1704886307374,"results":"79","hashOfConfig":"71"},{"size":1604,"mtime":1704547321685,"results":"80","hashOfConfig":"71"},{"size":4545,"mtime":1704543049953,"results":"81","hashOfConfig":"71"},{"size":1239,"mtime":1694804823602,"results":"82","hashOfConfig":"71"},{"size":1992,"mtime":1704379915523,"results":"83","hashOfConfig":"71"},{"size":11305,"mtime":1705000070025,"results":"84","hashOfConfig":"71"},{"size":293,"mtime":1694804823598,"results":"85","hashOfConfig":"71"},{"size":2662,"mtime":1704387040427,"results":"86","hashOfConfig":"71"},{"size":231,"mtime":1702390375473,"results":"87","hashOfConfig":"71"},{"size":395,"mtime":1694804823598,"results":"88","hashOfConfig":"71"},{"size":6840,"mtime":1704379884113,"results":"89","hashOfConfig":"71"},{"size":822,"mtime":1700842895129,"results":"90","hashOfConfig":"71"},{"size":223,"mtime":1700660049650,"results":"91","hashOfConfig":"71"},{"size":8346,"mtime":1704982550404,"results":"92","hashOfConfig":"71"},{"size":10322,"mtime":1704375774821,"results":"93","hashOfConfig":"71"},{"size":18325,"mtime":1704363291146,"results":"94","hashOfConfig":"71"},{"size":7859,"mtime":1704984898894,"results":"95","hashOfConfig":"71"},{"size":8521,"mtime":1704993238780,"results":"96","hashOfConfig":"71"},{"size":1894,"mtime":1690376072578,"results":"97","hashOfConfig":"71"},{"size":744,"mtime":1690376072582,"results":"98","hashOfConfig":"71"},{"size":574,"mtime":1690376072582,"results":"99","hashOfConfig":"71"},{"size":146,"mtime":1690376072576,"results":"100","hashOfConfig":"71"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"euarjz",{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"1f8o1ey",{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"162"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"162"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"162"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"162"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\College\\Projects\\social-media\\client\\src\\index.js",[],[],[],"D:\\College\\Projects\\social-media\\client\\src\\App.js",[],[],"D:\\College\\Projects\\social-media\\client\\src\\state\\index.js",[],[],"D:\\College\\Projects\\social-media\\client\\src\\theme.js",[],[],"D:\\College\\Projects\\social-media\\client\\src\\scenes\\profilePage\\index.jsx",[],["254"],"D:\\College\\Projects\\social-media\\client\\src\\scenes\\homePage\\index.jsx",[],[],"D:\\College\\Projects\\social-media\\client\\src\\scenes\\loginPage\\index.jsx",[],[],"D:\\College\\Projects\\social-media\\client\\src\\scenes\\loginPage\\Form.jsx",["255"],[],"D:\\College\\Projects\\social-media\\client\\src\\scenes\\widgets\\PostsWidget.jsx",[],["256"],"D:\\College\\Projects\\social-media\\client\\src\\scenes\\widgets\\FriendListWidget.jsx",[],["257"],"D:\\College\\Projects\\social-media\\client\\src\\scenes\\widgets\\UserWidget.jsx",[],["258"],"D:\\College\\Projects\\social-media\\client\\src\\scenes\\widgets\\AdvertWidget.jsx",[],[],"D:\\College\\Projects\\social-media\\client\\src\\scenes\\widgets\\MyPostWidget.jsx",[],[],"D:\\College\\Projects\\social-media\\client\\src\\scenes\\navbar\\index.jsx",[],[],"D:\\College\\Projects\\social-media\\client\\src\\components\\FlexBetween.jsx",[],[],"D:\\College\\Projects\\social-media\\client\\src\\components\\Friend.jsx",[],[],"D:\\College\\Projects\\social-media\\client\\src\\components\\UserImage.jsx",[],[],"D:\\College\\Projects\\social-media\\client\\src\\components\\WidgetWrapper.jsx",[],[],"D:\\College\\Projects\\social-media\\client\\src\\scenes\\widgets\\PostWidget.jsx",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\index.js",[],[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\App.js",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\state\\index.js",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\theme.js",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\profilePage\\index.jsx",[],["259"],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\loginPage\\index.jsx",["260","261","262"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Box, Typography, useMediaQuery } from \"@mui/material\";\r\nimport Form from \"./Form\";\r\nimport { colorTokens } from \"theme\";\r\nimport RainbowMouseTrail from './RainbowMouseTrail';\r\nimport './RainbowMouseTrail.css';\r\n\r\nconst LoginPage = () => {\r\n  const isNonMobileScreens = useMediaQuery(\"(min-width: 821px)\");\r\n\r\n  return (\r\n    <>\r\n    <Box\r\n        sx={{\r\n          backgroundImage: `url(\"/assets/wp9215875.webp\")`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          minHeight: \"100vh\",\r\n        }}\r\n      >\r\n        {isNonMobileScreens ? ( // For desktop devices, grid display\r\n          <Box\r\n            sx={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"repeat(4, 1fr)\",\r\n              gap: 0,\r\n              gridTemplateRows: \"auto\",\r\n              gridTemplateAreas: `\"header header sidebar sidebar\"\r\n                                \"main main sidebar sidebar\"\r\n                                \"main main sidebar sidebar\"`,\r\n              marginLeft: \"5rem\",\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                gridArea: \"header\",\r\n                marginTop: \"2rem\",\r\n              }}\r\n            >\r\n              <img\r\n                src=\"/assets/logo.png\"\r\n                alt=\"PulseWave Logo\"\r\n                style={{\r\n                  width: \"18rem\",\r\n                  height: \"auto\",\r\n                }}\r\n              />\r\n            </Box>\r\n\r\n            <Box\r\n              sx={{\r\n                gridArea: 'main',\r\n                mx: 'auto',\r\n                textAlign: 'left',\r\n                width: 'auto',\r\n              }}\r\n            >\r\n              <Typography variant=\"login\" color={colorTokens.login.txt}>\r\n                Join Millions on PulseWave – The Social Hub of Tomorrow!\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box\r\n              p=\"2rem\"\r\n              backgroundColor={colorTokens.login.bg}\r\n              sx={{\r\n                gridArea: \"sidebar\",\r\n                height: \"100vh\",\r\n                width: \"75%\",\r\n                margin: \"0rem\",\r\n                marginLeft: \"auto\",\r\n                color: colorTokens.login.txt,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Form />\r\n            </Box>\r\n          </Box>\r\n        ) : (\r\n          // For small devices, flex display\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"flex-start\",\r\n              alignItems: \"center\",\r\n              height: \"100vh\",\r\n              margin: \"1rem\",\r\n              marginTop: \"auto\",\r\n            }}\r\n          >\r\n            <img\r\n              src=\"/assets/logo.png\"\r\n              alt=\"PulseWave Logo\"\r\n              style={{\r\n                width: \"18rem\",\r\n                height: \"auto\",\r\n                marginTop: \"2rem\",\r\n              }}\r\n            />\r\n            <Box\r\n              sx={{\r\n                width: \"auto\",\r\n                color: colorTokens.login.txt,\r\n                textAlign: \"center\",\r\n                marginTop: \"5rem\",\r\n              }}\r\n            >\r\n              <Typography variant=\"login\" color={colorTokens.login.txt} fontSize=\"2rem\">\r\n                Join Millions on PulseWave – The Social Hub of Tomorrow!\r\n              </Typography>\r\n            </Box>\r\n            <Box\r\n              p=\"2rem\"\r\n              backgroundColor={colorTokens.login.bg}\r\n              sx={{\r\n                width: \"90%\",\r\n                height: \"auto\",\r\n                color: colorTokens.login.txt,\r\n                textAlign: \"center\",\r\n                marginTop: \"3rem\",\r\n                borderRadius: \"1rem\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Form />\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\homePage\\index.jsx",["263","264","265"],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\loginPage\\Form.jsx",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\MyPostWidget.jsx",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\FriendListWidget.jsx",[],["266"],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\UserWidget.jsx",[],["267"],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\AdvertWidget.jsx",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\PostsWidget.jsx",[],["268"],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\navbar\\index.jsx",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\components\\WidgetWrapper.jsx",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\components\\Friend.jsx",["269"],[],"import { PersonAddOutlined, PersonRemoveOutlined } from \"@mui/icons-material\";\r\nimport { Box, IconButton, Typography, useTheme } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setFriends } from \"state\";\r\nimport FlexBetween from \"./FlexBetween\";\r\nimport UserImage from \"./UserImage\";\r\n\r\nconst Friend = ({ friendId, name, userName, subtitle, userPicturePath }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { _id } = useSelector((state) => state.user);\r\n  const token = useSelector((state) => state.token);\r\n  const friends = useSelector((state) => state.user.friends) || [];\r\n\r\n  const { palette } = useTheme();\r\n  const primaryLight = palette.primary.light;\r\n  const primaryDark = palette.primary.dark;\r\n  const main = palette.neutral.main;\r\n  const medium = palette.neutral.medium;\r\n\r\n  const isFriend = friends.find((friend) => friend._id === friendId);\r\n\r\n  const patchFriend = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3001/users/${_id}/${friendId}`,\r\n      {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    dispatch(setFriends({ friends: data }));\r\n  };\r\n\r\n  return (\r\n    <FlexBetween>\r\n      <FlexBetween gap=\"1rem\">\r\n        <UserImage image={userPicturePath} size=\"55px\" />\r\n        <Box\r\n          onClick={() => {\r\n            navigate(`/profile/${friendId}`);\r\n            navigate(0);\r\n          }}\r\n        >\r\n          <Typography\r\n            color={palette.neutral.dark}\r\n            variant=\"h5\"\r\n            fontWeight=\"500\"\r\n            sx={{\r\n              \"&:hover\": {\r\n                color: palette.primary.main,\r\n                cursor: \"pointer\",\r\n              },\r\n            }}\r\n          >\r\n            {userName}\r\n          </Typography>\r\n          <Typography color={medium} fontSize=\"0.75rem\">\r\n            {subtitle}\r\n          </Typography>\r\n        </Box>\r\n      </FlexBetween>\r\n      {friendId !== _id && ( // Only render the IconButton if friendId is not equal to the current user's _id\r\n        <IconButton\r\n          onClick={() => patchFriend()}\r\n          sx={{ backgroundColor: primaryLight, p: \"0.6rem\" }}\r\n        >\r\n          {isFriend ? (\r\n            <PersonRemoveOutlined sx={{ color: primaryDark }} />\r\n          ) : (\r\n            <PersonAddOutlined sx={{ color: primaryDark }} />\r\n          )}\r\n        </IconButton>\r\n      )}\r\n    </FlexBetween>\r\n  );\r\n};\r\n\r\nexport default Friend;\r\n","D:\\College\\Projects\\Social-Media-App\\client\\src\\components\\FlexBetween.jsx",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\components\\UserImage.jsx",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\PostWidget.jsx",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\loginPage\\RainbowMouseTrail.js",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\loginPage\\Loader.js",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\StoriesWidget.jsx",[],["270"],"D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\StoryWidget.jsx",["271","272"],[],"import {\r\n  FavoriteBorderOutlined,\r\n  FavoriteOutlined,\r\n} from \"@mui/icons-material\";\r\nimport { Box, IconButton, Typography, useTheme, useMediaQuery, Divider, } from \"@mui/material\";\r\nimport FlexBetween from \"components/FlexBetween\";\r\nimport UserImage from \"components/UserImage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setStory } from \"state\";\r\nimport moment from \"moment\";\r\n\r\nconst StoryWidget = ({\r\n  storyId,\r\n  storyUserId,\r\n  name,\r\n  description,\r\n  location,\r\n  picturePath,\r\n  userPicturePath,\r\n  likes,\r\n  comments,\r\n  createdAt,\r\n  modalOpen,\r\n}) => {\r\n  // const [isComments, setIsComments] = useState(false);\r\n  // const [newComment, setNewComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.token);\r\n  const loggedInUserId = useSelector((state) => state.user._id);\r\n  const isLiked = Boolean(likes[loggedInUserId]);\r\n  // const likeCount = Object.keys(likes).length;\r\n\r\n  const { palette } = useTheme();\r\n  const primary = palette.primary.main;\r\n\r\n  const isNonMobileScreens = useMediaQuery(\"(min-width:1000px)\");\r\n\r\n  const patchLike = async () => {\r\n    const response = await fetch(`http://localhost:3001/stories/${storyId}/like`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId: loggedInUserId }),\r\n    });\r\n    const updatedStory = await response.json();\r\n    dispatch(setStory({ story: updatedStory }));\r\n  };\r\n\r\n  // const handleAddComment = async () => {\r\n  //   const response = await fetch(\r\n  //     `http://localhost:3001/stories/${storyId}/comments`,\r\n  //     {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${token}`,\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       },\r\n  //       body: JSON.stringify({ userId: loggedInUserId, commentText: newComment }),\r\n  //     }\r\n  //   );\r\n  //   const updatedStory = await response.json();\r\n  //   dispatch(setStory({ story: updatedStory }));\r\n  //   setNewComment(\"\"); // Clear the comment input after adding\r\n  // };\r\n\r\n  const createdAtMoment = moment(createdAt);\r\n  const currentMoment = moment();\r\n\r\n  let formattedTime;\r\n\r\n  const minutesAgo = currentMoment.diff(createdAtMoment, 'minutes');\r\n  const hoursAgo = currentMoment.diff(createdAtMoment, 'hours');\r\n  const secondsAgo = currentMoment.diff(createdAtMoment, 'seconds');\r\n\r\n  if (hoursAgo > 24) {\r\n    formattedTime = createdAtMoment.format(\"MMMM D, YYYY [at] h:mm A\");\r\n  } else if (hoursAgo >= 1) {\r\n    formattedTime = `${hoursAgo} ${hoursAgo === 1 ? 'hour' : 'hours'} ago`;\r\n  } else if (minutesAgo >= 1) {\r\n    formattedTime = `${minutesAgo} ${minutesAgo === 1 ? 'minute' : 'minutes'} ago`;\r\n  } else {\r\n    formattedTime = `${secondsAgo} ${secondsAgo === 1 ? 'second' : 'seconds'} ago`;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isNonMobileScreens ? (\r\n        // Desktop Devices\r\n        <Box>        \r\n        {modalOpen ? (\r\n          // Display the posted story images\r\n          <Box>\r\n            <FlexBetween sx={{ flexDirection: 'column' }}>\r\n              <Box style={{ position: 'relative' }}>\r\n                {/* Story Image */}\r\n                <img\r\n                  style={{\r\n                    width: '400px',\r\n                    height: '600px',\r\n                    borderRadius: '0.75rem',\r\n                  }}\r\n                  alt=\"story\"\r\n                  src={`http://localhost:3001/assets/${picturePath}`}\r\n                />\r\n  \r\n                {/* User Image */}\r\n                <Box\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    margin: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <UserImage\r\n                    image={userPicturePath}\r\n                    size=\"45px\"\r\n                  />\r\n                </Box>\r\n                \r\n                {/* Display Caption for the story */}\r\n                {description && (\r\n                  <Typography\r\n                    variant=\"subtitle\"\r\n                    component=\"Box\"\r\n                    sx={{\r\n                      position: 'absolute',\r\n                      bottom: '4rem',\r\n                      left: '0rem',\r\n                      right: '0rem',\r\n                      color: palette.neutral.dark,\r\n                      maxWidth: '400px',\r\n                      overflow: 'hidden',\r\n                      whiteSpace: 'normal',\r\n                      wordWrap: 'break-word',\r\n                      textOverflow: 'ellipsis',\r\n                      backgroundColor: `${palette.neutral.light}AA`,\r\n                      padding: '0.2rem',\r\n                      textAlign: 'center',\r\n                    }}\r\n                  >\r\n                    {description}\r\n                  </Typography>\r\n                )}\r\n              </Box>\r\n              \r\n              {/* Display the Like Button */}\r\n              <Box sx={{\r\n                display: 'flex',\r\n                width: '100%',\r\n                marginTop: '0.5rem',\r\n                alignItems: 'center',\r\n                justifyContent: 'flex-end'\r\n              }}>\r\n                <IconButton onClick={patchLike}>\r\n                  {isLiked ? (\r\n                    <FavoriteOutlined sx={{ color: primary }} />\r\n                  ) : (\r\n                    <FavoriteBorderOutlined />\r\n                  )}\r\n                </IconButton>\r\n                {/* <Typography>{likeCount}</Typography> */}\r\n              </Box>\r\n            </FlexBetween>\r\n          </Box>\r\n        ) : (\r\n          // Display the story cards\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              position: \"relative\",\r\n              cursor: \"pointer\",\r\n              padding: \"0px\",\r\n              borderRadius: \"0.75rem\",\r\n              \"&:hover\": {\r\n                boxShadow: \"0 0 20px 5px rgba(0, 255, 255, 0.8)\",\r\n              },\r\n            }}\r\n          >\r\n            {/* Story Image */}\r\n            <Box>\r\n              {picturePath && (\r\n                <img\r\n                  width=\"145px\"\r\n                  height=\"220px\"\r\n                  alt=\"story\"\r\n                  style={{\r\n                    borderRadius: \"0.75rem\",\r\n                    filter: \"blur(2px)\",\r\n                  }}\r\n                  src={`http://localhost:3001/assets/${picturePath}`}\r\n                />\r\n              )}\r\n            </Box>\r\n  \r\n            {/* User Image */}\r\n            <Box\r\n              sx={{\r\n                position: \"absolute\",\r\n                bottom: 0,\r\n                left: \"50%\",\r\n                transform: \"translateX(-50%)\",\r\n                marginBottom: \"0.75rem\",\r\n              }}\r\n            >\r\n              <UserImage\r\n                image={userPicturePath}\r\n                size=\"55px\"\r\n              />\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        </Box>\r\n      ) : (\r\n        // Mobile Devices\r\n        <Box>\r\n          {modalOpen ? (\r\n          // Display the posted story images\r\n          <Box>\r\n            <FlexBetween sx={{ flexDirection: 'column' }}>  \r\n              {/* User Image */}\r\n              <Box\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  left: 0,\r\n                  right: 0,\r\n                  padding: \"0.5rem\",\r\n                  zIndex: 1000,\r\n                }}\r\n              >\r\n                <UserImage\r\n                  image={userPicturePath}\r\n                  size=\"45px\"\r\n                />\r\n              </Box>              \r\n              \r\n              <Box style={{ position: 'relative' }}>\r\n                {/* Story Image */}\r\n                <img\r\n                  style={{\r\n                    width: '100vw',\r\n                    height: '100%',\r\n                  }}\r\n                  alt=\"story\"\r\n                  src={`http://localhost:3001/assets/${picturePath}`}\r\n                />\r\n                \r\n                {/* Display Caption for the story */}\r\n                {description && (\r\n                  <Typography\r\n                    variant=\"subtitle\"\r\n                    component=\"Box\"\r\n                    sx={{\r\n                      position: 'absolute',\r\n                      bottom: '3.5rem',\r\n                      left: '0rem',\r\n                      right: '0rem',\r\n                      color: palette.neutral.dark,\r\n                      maxWidth: '400px',\r\n                      overflow: 'hidden',\r\n                      whiteSpace: 'normal',\r\n                      wordWrap: 'break-word',\r\n                      textOverflow: 'ellipsis',\r\n                      backgroundColor: `${palette.neutral.light}AA`,\r\n                      padding: '0.2rem',\r\n                      textAlign: 'center',\r\n                    }}\r\n                  >\r\n                    {description}\r\n                  </Typography>\r\n                )}\r\n              </Box>   \r\n\r\n              {/* Display the Like Button */}\r\n              <Box sx={{\r\n                position: 'absolute',\r\n                bottom: '1rem',\r\n                right: '0.5rem',\r\n              }}>\r\n                <IconButton onClick={patchLike}>\r\n                  {isLiked ? (\r\n                    <FavoriteOutlined sx={{ color: primary }} />\r\n                  ) : (\r\n                    <FavoriteBorderOutlined />\r\n                  )}\r\n                </IconButton>\r\n                {/* <Typography>{likeCount}</Typography> */}\r\n              </Box>\r\n            </FlexBetween>\r\n          </Box>\r\n        ) : (\r\n          // Display the story cards\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >  \r\n            {/* User Image */}\r\n            <Box\r\n              sx={{\r\n              }}\r\n            >\r\n              <UserImage\r\n                image={userPicturePath}\r\n                size=\"55px\"\r\n              />\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoryWidget;","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\MyStoryWidget.jsx",["273","274","275"],[],"import {\r\n  DeleteOutlined,\r\n  Close,\r\n  Add,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  InputBase,\r\n  useTheme,\r\n  Button,\r\n  IconButton,\r\n  Modal,\r\n  Badge,\r\n  Slider,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport FlexBetween from \"components/FlexBetween\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport UserImage from \"components/UserImage\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setStories } from \"state\";\r\n\r\nconst MyStoryWidget = ({ picturePath, userPicturePath, currentUserStory, onImageClick }) => {\r\n  const dispatch = useDispatch();\r\n  const [image, setImage] = useState(null);\r\n  const [story, setStory] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [size, setSize] = useState(100);\r\n\r\n  const { palette } = useTheme();\r\n  const { _id } = useSelector((state) => state.user);\r\n  const token = useSelector((state) => state.token);\r\n  const isNonMobileScreens = useMediaQuery(\"(min-width: 1000px)\");\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleStory = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"userId\", _id);\r\n    formData.append(\"description\", story);\r\n    if (image) {\r\n      formData.append(\"picture\", image);\r\n      formData.append(\"picturePath\", image.name);\r\n    }\r\n\r\n    const response = await fetch(`http://localhost:3001/stories`, {\r\n      method: \"POST\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n      body: formData,\r\n    });\r\n    const stories = await response.json();\r\n    dispatch(setStories({ stories }));\r\n    setImage(null);\r\n    setStory(\"\");\r\n  };\r\n  \r\n  const handleSizeChange = (event, newValue) => {\r\n    setSize(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {isNonMobileScreens ? (\r\n      //Desktop devices\r\n      <Box>\r\n        {currentUserStory ? (\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            position: \"relative\",\r\n            cursor: \"pointer\",\r\n            padding: \"0px\",\r\n            borderRadius: \"0.75rem\",\r\n            \"&:hover\": {\r\n              boxShadow: \"0 0 20px 5px rgba(0, 255, 255, 0.8)\",\r\n            },\r\n          }}\r\n        >\r\n          {/* Story Image */}\r\n          <Box\r\n            onClick={onImageClick}\r\n            sx={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            {picturePath && (\r\n              <img\r\n                width=\"145px\"\r\n                height=\"220px\"\r\n                alt=\"story\"\r\n                style={{\r\n                  borderRadius: \"0.75rem\",\r\n                  filter: \"blur(2px)\",\r\n                }}\r\n                src={`http://localhost:3001/assets/${picturePath}`}\r\n              />\r\n            )}\r\n          </Box>\r\n\r\n          {/* User Image */}\r\n          <Box\r\n            onClick={handleOpen}\r\n            sx={{\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              left: \"50%\",\r\n              transform: \"translateX(-50%)\",\r\n              marginBottom: \"0.75rem\",\r\n            }}\r\n          >\r\n            <Badge\r\n              variant=\"standard\"\r\n              size=\"large\"\r\n              badgeContent={<Add sx={{ fontSize: '1rem' }} />}\r\n              sx={{\r\n                '& .MuiBadge-standard': {\r\n                  backgroundColor: palette.primary.main,\r\n                  top: 10,\r\n                  width: '20px',\r\n                  height: '20px',\r\n                  borderRadius: '100%',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                },\r\n              }}\r\n            >\r\n              <UserImage\r\n                image={userPicturePath}\r\n                size=\"55px\"\r\n              />\r\n            </Badge>\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            position: \"relative\",\r\n            cursor: \"pointer\",\r\n            padding: \"0px\",\r\n            borderRadius: \"0.75rem\",\r\n            \"&:hover\": {\r\n              boxShadow: \"0 0 20px 5px rgba(0, 255, 255, 0.8)\",\r\n            },\r\n          }}\r\n          onClick={handleOpen}\r\n        >\r\n          {/* Story Image */}\r\n          <Box\r\n            sx={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            {picturePath && (\r\n              <img\r\n                width=\"145px\"\r\n                height=\"220px\"\r\n                alt=\"story\"\r\n                style={{\r\n                  borderRadius: \"0.75rem\",\r\n                  filter: \"blur(2px)\",\r\n                }}\r\n                src={`http://localhost:3001/assets/${userPicturePath}`}\r\n              />\r\n            )}\r\n          </Box>\r\n\r\n          {/* User Image */}\r\n          <Box\r\n            sx={{\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              left: \"50%\",\r\n              transform: \"translateX(-50%)\",\r\n              marginBottom: \"0.75rem\",\r\n            }}\r\n          >\r\n            <Badge\r\n              variant=\"standard\"\r\n              size=\"large\"\r\n              badgeContent={<Add sx={{ fontSize: '1rem' }} />}\r\n              sx={{\r\n                '& .MuiBadge-standard': {\r\n                  backgroundColor: palette.primary.main,\r\n                  top: 10,\r\n                  width: '20px',\r\n                  height: '20px',\r\n                  borderRadius: '100%',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                },\r\n              }}\r\n            >\r\n              <UserImage\r\n                image={userPicturePath}\r\n                size=\"55px\"\r\n              />\r\n            </Badge>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      </Box>\r\n    ) : (\r\n      //Mobile devices\r\n      <Box>\r\n        {currentUserStory ? (\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n\r\n          {/* User Image */}\r\n          <Box>\r\n            <Badge\r\n              variant=\"standard\"\r\n              size=\"large\"\r\n              badgeContent={\r\n                <IconButton onClick={handleOpen}>\r\n                  <Add sx={{ fontSize: '1rem' }} />\r\n                </IconButton>\r\n              }\r\n              sx={{\r\n                '& .MuiBadge-standard': {\r\n                  backgroundColor: palette.primary.main,\r\n                  top: 10,\r\n                  width: '20px',\r\n                  height: '20px',\r\n                  borderRadius: '100%',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                },\r\n              }}\r\n            >\r\n              <Box onClick={onImageClick}>\r\n                <UserImage\r\n                  image={userPicturePath}\r\n                  size=\"55px\"\r\n                />\r\n              </Box>\r\n            </Badge>\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Box\r\n          onClick={handleOpen}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n\r\n          {/* User Image */}\r\n          <Box>\r\n            <Badge\r\n              variant=\"standard\"\r\n              size=\"large\"              \r\n              badgeContent={<Add sx={{ fontSize: '1rem' }} />}\r\n              sx={{\r\n                '& .MuiBadge-standard': {\r\n                  backgroundColor: palette.primary.main,\r\n                  top: 10,\r\n                  width: '20px',\r\n                  height: '20px',\r\n                  borderRadius: '100%',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                },\r\n              }}\r\n            >\r\n              <Box>\r\n                <UserImage\r\n                  image={userPicturePath}\r\n                  size=\"55px\"\r\n                />\r\n              </Box>\r\n            </Badge>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      </Box>\r\n    )}\r\n      \r\n    {isNonMobileScreens ? (\r\n      // Desktop screens\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"image-modal\"\r\n        aria-describedby=\"image-modal-description\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: '50rem',\r\n            height: '100vh',\r\n            bgcolor: 'background.paper',\r\n            border: 'none',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            {image ? (\r\n              <FlexBetween sx={{ flexDirection: 'column', alignItems: 'center' }}>\r\n                <Box style={{ position: 'relative' }}>\r\n                  <img\r\n                    src={URL.createObjectURL(image)}\r\n                    alt=\"selectedStory\"\r\n                    style={{\r\n                      width: '400px',\r\n                      height: '600px',\r\n                      borderRadius: '0.75rem',\r\n                    }}\r\n                  />\r\n                  {story && (\r\n                    <Typography\r\n                      variant=\"subtitle\"\r\n                      component=\"Box\"\r\n                      sx={{\r\n                        position: 'absolute',\r\n                        bottom: '4rem',\r\n                        left: '0rem',\r\n                        right: '0rem',\r\n                        color: palette.neutral.dark,\r\n                        maxWidth: '400px',\r\n                        overflow: 'hidden',\r\n                        whiteSpace: 'normal',\r\n                        wordWrap: 'break-word',\r\n                        textOverflow: 'ellipsis',\r\n                        backgroundColor: `${palette.neutral.light}AA`,\r\n                        padding: '0.2rem',\r\n                        textAlign: 'center',\r\n                      }}\r\n                    >\r\n                      {story}\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n                <Box sx={{ display: 'flex', width: '100%', marginTop: '1rem' }}>\r\n                  <InputBase\r\n                    placeholder=\"What's on your mind...\"\r\n                    onChange={(e) => setStory(e.target.value)}\r\n                    value={story}\r\n                    sx={{\r\n                      flex: 1,\r\n                      backgroundColor: palette.neutral.light,\r\n                      borderRadius: \"1rem\",\r\n                      padding: \"1rem\",\r\n                      marginRight: '1rem',\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    disabled={!story}\r\n                    onClick={handleStory}\r\n                    sx={{\r\n                      color: palette.neutral.light,\r\n                      backgroundColor: palette.primary.main,\r\n                      borderRadius: \"1rem\",\r\n                      '&:hover': {\r\n                        color: palette.neutral.dark,\r\n                        backgroundColor: palette.primary.light,\r\n                      },\r\n                      whiteSpace: 'nowrap',\r\n                    }}\r\n                  >\r\n                    POST\r\n                  </Button>\r\n\r\n                  <IconButton onClick={() => setImage(null)}>\r\n                    <DeleteOutlined />\r\n                  </IconButton>\r\n                </Box>\r\n              </FlexBetween>\r\n            ) : (\r\n              <Dropzone\r\n                acceptedFiles=\".jpg,.jpeg,.png\"\r\n                multiple={false}\r\n                onDrop={(acceptedFiles) => setImage(acceptedFiles[0])}\r\n              >\r\n                {({ getRootProps, getInputProps }) => (\r\n                  <FlexBetween>\r\n                    <Box\r\n                      {...getRootProps()}\r\n                      border={`2px dashed ${palette.primary.main}`}\r\n                      p=\"1rem\"\r\n                      width=\"100%\"\r\n                      sx={{ \"&:hover\": { cursor: \"pointer\" } }}\r\n                    >\r\n                      <input {...getInputProps()} />\r\n                      <p>Add Image Here</p>\r\n                    </Box>\r\n                  </FlexBetween>\r\n                )}\r\n              </Dropzone>\r\n            )}\r\n          </Box>\r\n\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={handleClose}\r\n            sx={{ position: \"absolute\", top: 0, right: 0 }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </Modal>\r\n    ) : (\r\n      // Mobile devices\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"image-modal\"\r\n        aria-describedby=\"image-modal-description\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: '100vw',\r\n            height: '100vh',\r\n            bgcolor: 'background.paper',\r\n            border: 'none',\r\n            boxShadow: 24,\r\n            p: 2,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            {image ? (\r\n              <FlexBetween sx={{ flexDirection: 'column', alignItems: 'center' }}>\r\n                <Box style={{ position: 'relative' }}>\r\n                  <img\r\n                    src={URL.createObjectURL(image)}\r\n                    alt=\"selectedStory\"\r\n                    style={{\r\n                      width: `100%`,\r\n                      height: `100%`,\r\n                    }}\r\n                  />\r\n                  {story && (\r\n                    <Typography\r\n                      variant=\"subtitle\"\r\n                      component=\"Box\"\r\n                      sx={{\r\n                        position: 'absolute',\r\n                        bottom: '4rem',\r\n                        left: '0rem',\r\n                        right: '0rem',\r\n                        color: palette.neutral.dark,\r\n                        maxWidth: '400px',\r\n                        overflow: 'hidden',\r\n                        whiteSpace: 'normal',\r\n                        wordWrap: 'break-word',\r\n                        textOverflow: 'ellipsis',\r\n                        backgroundColor: `${palette.neutral.light}AA`,\r\n                        padding: '0.2rem',\r\n                        textAlign: 'center',\r\n                      }}\r\n                    >\r\n                      {story}\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n                <Box sx={{\r\n                  position: 'absolute',\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  width: '100%',\r\n                  bottom: '1rem',\r\n                  height: '2.5rem',\r\n                  justifyContent: 'center',\r\n                }}>\r\n                  <InputBase\r\n                    placeholder=\"What's on your mind...\"\r\n                    onChange={(e) => setStory(e.target.value)}\r\n                    value={story}\r\n                    sx={{\r\n                      backgroundColor: palette.neutral.light,\r\n                      borderRadius: \"1rem\",\r\n                      padding: \"1rem\",\r\n                      marginRight: '1rem',\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    disabled={!story}\r\n                    onClick={handleStory}\r\n                    sx={{\r\n                      color: palette.neutral.light,\r\n                      backgroundColor: palette.primary.main,\r\n                      borderRadius: \"1rem\",\r\n                      '&:hover': {\r\n                        color: palette.neutral.dark,\r\n                        backgroundColor: palette.primary.light,\r\n                      },\r\n                      whiteSpace: 'nowrap',\r\n                    }}\r\n                  >\r\n                    POST\r\n                  </Button>\r\n\r\n                  <IconButton onClick={() => setImage(null)}>\r\n                    <DeleteOutlined />\r\n                  </IconButton>\r\n                </Box>\r\n              </FlexBetween>\r\n            ) : (\r\n              <Dropzone\r\n                acceptedFiles=\".jpg,.jpeg,.png\"\r\n                multiple={false}\r\n                onDrop={(acceptedFiles) => setImage(acceptedFiles[0])}\r\n              >\r\n                {({ getRootProps, getInputProps }) => (\r\n                  <FlexBetween>\r\n                    <Box\r\n                      {...getRootProps()}\r\n                      border={`2px dashed ${palette.primary.main}`}\r\n                      p=\"1rem\"\r\n                      width=\"100%\"\r\n                      sx={{ \"&:hover\": { cursor: \"pointer\" } }}\r\n                    >\r\n                      <input {...getInputProps()} />\r\n                      <p>Add Image Here</p>\r\n                    </Box>\r\n                  </FlexBetween>\r\n                )}\r\n              </Dropzone>\r\n            )}\r\n          </Box>\r\n\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={handleClose}\r\n            sx={{ position: \"absolute\", top: 0, right: 0 }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </Modal>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyStoryWidget;","D:\\College\\Projects\\Social-Media-App\\client\\src\\scenes\\widgets\\StoryModal.jsx",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\components\\SearchDrawer.jsx",[],["276"],"D:\\College\\Projects\\Social-Media-App\\client\\src\\components\\navbar\\Navbar.jsx",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\context\\authContext.js",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\context\\darkModeContext.js",[],[],"D:\\College\\Projects\\Social-Media-App\\client\\src\\axios.js",[],[],{"ruleId":"277","severity":1,"message":"278","line":28,"column":6,"nodeType":"279","endLine":28,"endColumn":8,"suggestions":"280","suppressions":"281"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":20,"nodeType":"284","messageId":"285","endLine":1,"endColumn":29},{"ruleId":"277","severity":1,"message":"286","line":38,"column":6,"nodeType":"279","endLine":38,"endColumn":8,"suggestions":"287","suppressions":"288"},{"ruleId":"277","severity":1,"message":"289","line":28,"column":6,"nodeType":"279","endLine":28,"endColumn":8,"suggestions":"290","suppressions":"291"},{"ruleId":"277","severity":1,"message":"278","line":35,"column":6,"nodeType":"279","endLine":35,"endColumn":8,"suggestions":"292","suppressions":"293"},{"ruleId":"277","severity":1,"message":"278","line":29,"column":6,"nodeType":"279","endLine":29,"endColumn":8,"suggestions":"294","suppressions":"295"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":17,"nodeType":"284","messageId":"285","endLine":1,"endColumn":26},{"ruleId":"282","severity":1,"message":"296","line":1,"column":28,"nodeType":"284","messageId":"285","endLine":1,"endColumn":36},{"ruleId":"282","severity":1,"message":"297","line":5,"column":8,"nodeType":"284","messageId":"285","endLine":5,"endColumn":25},{"ruleId":"282","severity":1,"message":"296","line":3,"column":10,"nodeType":"284","messageId":"285","endLine":3,"endColumn":18},{"ruleId":"282","severity":1,"message":"298","line":9,"column":8,"nodeType":"284","messageId":"285","endLine":9,"endColumn":21},{"ruleId":"282","severity":1,"message":"299","line":10,"column":8,"nodeType":"284","messageId":"285","endLine":10,"endColumn":20},{"ruleId":"277","severity":1,"message":"289","line":28,"column":6,"nodeType":"279","endLine":28,"endColumn":8,"suggestions":"300","suppressions":"301"},{"ruleId":"277","severity":1,"message":"278","line":35,"column":6,"nodeType":"279","endLine":35,"endColumn":8,"suggestions":"302","suppressions":"303"},{"ruleId":"277","severity":1,"message":"286","line":38,"column":6,"nodeType":"279","endLine":38,"endColumn":8,"suggestions":"304","suppressions":"305"},{"ruleId":"282","severity":1,"message":"306","line":19,"column":9,"nodeType":"284","messageId":"285","endLine":19,"endColumn":13},{"ruleId":"277","severity":1,"message":"307","line":72,"column":6,"nodeType":"279","endLine":72,"endColumn":8,"suggestions":"308","suppressions":"309"},{"ruleId":"282","severity":1,"message":"310","line":5,"column":64,"nodeType":"284","messageId":"285","endLine":5,"endColumn":71},{"ruleId":"282","severity":1,"message":"311","line":85,"column":5,"nodeType":"284","messageId":"285","endLine":85,"endColumn":18},{"ruleId":"282","severity":1,"message":"312","line":15,"column":3,"nodeType":"284","messageId":"285","endLine":15,"endColumn":9},{"ruleId":"282","severity":1,"message":"313","line":30,"column":10,"nodeType":"284","messageId":"285","endLine":30,"endColumn":14},{"ruleId":"282","severity":1,"message":"314","line":60,"column":9,"nodeType":"284","messageId":"285","endLine":60,"endColumn":25},{"ruleId":"277","severity":1,"message":"315","line":45,"column":6,"nodeType":"279","endLine":45,"endColumn":8,"suggestions":"316","suppressions":"317"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["318"],["319"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getPosts', 'getUserPosts', and 'isProfile'. Either include them or remove the dependency array.",["320"],["321"],"React Hook useEffect has a missing dependency: 'getFriends'. Either include it or remove the dependency array.",["322"],["323"],["324"],["325"],["326"],["327"],"'useState' is defined but never used.","'RainbowMouseTrail' is defined but never used.","'MyStoryWidget' is defined but never used.","'AdvertWidget' is defined but never used.",["328"],["329"],["330"],["331"],["332"],["333"],"'main' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStories', 'getUserStories', and 'isProfile'. Either include them or remove the dependency array.",["334"],["335"],"'Divider' is defined but never used.","'formattedTime' is assigned a value but never used.","'Slider' is defined but never used.","'size' is assigned a value but never used.","'handleSizeChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["336"],["337"],{"desc":"338","fix":"339"},{"kind":"340","justification":"341"},{"desc":"342","fix":"343"},{"kind":"340","justification":"341"},{"desc":"344","fix":"345"},{"kind":"340","justification":"341"},{"desc":"338","fix":"346"},{"kind":"340","justification":"341"},{"desc":"338","fix":"347"},{"kind":"340","justification":"341"},{"desc":"344","fix":"348"},{"kind":"340","justification":"341"},{"desc":"338","fix":"349"},{"kind":"340","justification":"341"},{"desc":"342","fix":"350"},{"kind":"340","justification":"341"},{"desc":"351","fix":"352"},{"kind":"340","justification":"341"},{"desc":"353","fix":"354"},{"kind":"340","justification":"341"},"Update the dependencies array to be: [getUser]",{"range":"355","text":"356"},"directive","","Update the dependencies array to be: [getPosts, getUserPosts, isProfile]",{"range":"357","text":"358"},"Update the dependencies array to be: [getFriends]",{"range":"359","text":"360"},{"range":"361","text":"356"},{"range":"362","text":"356"},{"range":"363","text":"360"},{"range":"364","text":"356"},{"range":"365","text":"358"},"Update the dependencies array to be: [getStories, getUserStories, isProfile]",{"range":"366","text":"367"},"Update the dependencies array to be: [getUsers]",{"range":"368","text":"369"},[995,997],"[getUser]",[1085,1087],"[getPosts, getUserPosts, isProfile]",[894,896],"[getFriends]",[1139,1141],[1062,1064],[900,902],[1139,1141],[1085,1087],[2255,2257],"[getStories, getUserStories, isProfile]",[1189,1191],"[getUsers]"]